// Place your key bindings in this file to override the defaultsauto[]
[
    {
      "key": "ctrl+alt+e ctrl+alt+j",
      "command": "workbench.action.joinTwoGroups"
    },
    {
      "key": "ctrl+j",
      "command": "editor.action.joinLines"
    },
    {
      "key": "ctrl+alt+a ctrl+alt+b",
      "command": "atlascode.views.bb.pullrequestsTreeView.focus"
    },
    {
      "key": "ctrl+alt+a ctrl+alt+j",
      "command": "atlascode.views.jira.customJql.focus"
    },
    {
      "key": "ctrl+t ctrl+f",
      "command": "workbench.action.terminal.focus"
    },
    {
      "key": "ctrl+t ctrl+t",
      "command": "workbench.action.quickOpenTerm"
    },
    {
      "key": "ctrl+alt+u ctrl+alt+u",
      "command": "editor.action.transformToUppercase"
    },
    {
      "key": "ctrl+alt+l ctrl+alt+l",
      "command": "editor.action.transformToLowercase"
    },
    {
      "key": "ctrl+alt+e ctrl+alt+right",
      "command": "workbench.action.moveEditorToRightGroup"
    },
    {
      "key": "ctrl+alt+k ctrl+alt+t",
      "command": "calva.toggleBetweenImplAndTest"
    },
    {
      "key": "ctrl+alt+space j",
      "command": "joyride.runUserScript",
      "args": "javadoc.cljs"
    },
    {
      "key": "ctrl+alt+space /",
      "command": "joyride.runUserScript",
      "args": "clojuredocs.cljs"
    },
    {
      "key": "ctrl+alt+b q",
      "command": "joyride.runUserScript",
      "args": "qa_repl.cljs"
    },
    {
      "key": "ctrl+alt+b p",
      "command": "joyride.runUserScript",
      "args": "prod_repl.cljs"
    },
    {
      "key": "ctrl+alt+n ctrl+alt+s",
      "command": "joyride.runUserScript",
      "args": "ns.cljs"
    },
    {
      "key": "ctrl+alt+d ctrl+alt+t",
      "command": "joyride.runUserScript",
      "args": "tap.cljs"
    },
    {
      "key": "ctrl+alt+e ctrl+alt+w",
      "command": "workbench.action.closeOtherEditors"
    },
    {
      "key": "ctrl+alt+z",
      "command": "notifications.clearAll"
    },
    {
      "key": "alt+home",
      "command": "paredit.openList",
      "when": "calva:keybindingsEnabled && editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
      "key": "ctrl+home",
      "command": "-paredit.openList",
      "when": "calva:keybindingsEnabled && editorTextFocus && editorLangId == 'clojure' && paredit:keyMap =~ /original|strict/"
    },
    {
      "key": "ctrl+alt+c z",
      "command": "clojureLsp.refactor.cleanNs"
    },
    {
      "key": "ctrl+alt+c ctrl+alt+q",
      "command": "calva.disconnect"
    },
    {
      "key": "ctrl+alt+c ctrl+alt+k",
      "command": "calva.clearReplHistory"
    },
    {
      "key": "ctrl+shift+q q",
      "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
      "when": "inQuickOpen && inViewsPicker"
    },
    {
      "key": "ctrl+shift+q",
      "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
      "when": "inQuickOpen && inViewsPicker"
    },
    {
      "key": "ctrl+shift+q e",
      "command": "copilotSidebar.explain.focus"
    },
    {
      "key": "ctrl+shift+q t",
      "command": "copilotSidebar.generateTests.focus"
    },
    {
      "key": "ctrl+alt+k up",
      "command": "workbench.action.moveEditorToAboveGroup"
    },
    {
      "key": "ctrl+alt+k down",
      "command": "workbench.action.moveEditorToBelowGroup"
    },
    {
      "key": "ctrl+alt+n ctrl+alt+f",
      "command": "explorer.newFolder"
    },
    {
      "key": "ctrl+alt+enter",
      "command": "github.copilot.generate",
      "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
      "key": "ctrl+enter",
      "command": "-github.copilot.generate",
      "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
      "key": "ctrl+shift+g ctrl+shift+s",
      "command": "git.sync"
    },
    {
      "key": "ctrl+alt+v ctrl+alt+t",
      "command": "workbench.view.extension.test"
    },
    {
      "key": "ctrl+alt+l ctrl+alt+f",
      "command": "liveshare.follow",
      "when": "liveshare:hasCollaborators && !liveshare:isFollowing"
    },
    {
      "key": "ctrl+alt+f",
      "command": "-liveshare.follow",
      "when": "liveshare:hasCollaborators && !liveshare:isFollowing"
    },
    {
      "key": "ctrl+alt+l ctrl+alt+/",
      "command": "liveshare.followToTheSide",
      "when": "liveshare:hasCollaborators"
    },
    {
      "key": "ctrl+alt+/",
      "command": "-liveshare.followToTheSide",
      "when": "liveshare:hasCollaborators"
    },
    {
      "key": "ctrl+alt+l ctrl+alt+j",
      "command": "liveshare.join",
      "when": "liveshare:state != 'Joined' && liveshare:state != 'Shared'"
    },
    {
      "key": "ctrl+alt+j",
      "command": "-liveshare.join",
      "when": "liveshare:state != 'Joined' && liveshare:state != 'Shared'"
    },
    {
      "key": "ctrl+alt+l ctrl+alt+f",
      "command": "liveshare.unfollow",
      "when": "liveshare:hasCollaborators && liveshare:isFollowing"
    },
    {
      "key": "ctrl+alt+f",
      "command": "-liveshare.unfollow",
      "when": "liveshare:hasCollaborators && liveshare:isFollowing"
    }
]
